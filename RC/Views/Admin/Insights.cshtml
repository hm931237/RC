@using RC.Models;

@{
    ViewBag.Title = "Insights";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    ApplicationDbContext db = new ApplicationDbContext();
    var ReviewsCounter = 1;
}




<div class="nav-tabs-custom">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#activity" data-toggle="tab">Admin Visualizations</a></li>

    </ul>

    <div class="tab-content">
        <div class="active tab-pane" id="activity">

            <div class="row">
                <div class="col-md-12">
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 class="box-title text-info text-bold" style="font-size:15px;"><i class="fa fa-chart-pie fa-spin"></i> Organizations Reviews </h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <table id="OrgReviews" class="table table-bordered table-condensed table-hover table-responsive">
                                <thead>
                                    <tr>
                                        <th># Rank</th>
                                        <th>Organization Name</th>
                                        <th>Males Reviews</th>
                                        <th>Females Reviews</th>
                                        <th>Reviews Total Number</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var top in (IEnumerable<Tuple<Organization, int, int, int>>)ViewData["orderedReviewsTuple"])
                                    {
                                        <tr>
                                            <td>@ReviewsCounter</td>
                                            <td> <img class="img-circle" style="width:40px;height:40px;" src="~/Content/img/OrganizationsProfilePics/@top.Item1.User.imageUrl" /> @top.Item1.orgnizationName</td>
                                            <td>@top.Item3</td>
                                            <td>@top.Item4</td>
                                            <td>@top.Item2</td>

                                        </tr>
                                        ReviewsCounter++;
                                    }

                                </tbody>

                            </table>

                        </div>
                        <!-- /.box-body -->
                    </div>



                </div>

            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="box box-success">
                        <div class="box-header with-border">
                            <h3 class="box-title text-success text-bold" style="font-size:15px;"><i class="fa fa-chart-pie fa-spin"></i> Number of Organizations Per City </h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="canvasRadar" style="height:250px"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>


                </div>

                <div class="col-md-6">
                    <div class="box box-danger">
                        <div class="box-header with-border">
                            <h3 class="box-title text-danger text-bold" style="font-size:15px;"><i class="fa fa-chart-line fa-spin"></i> Number of Organizations Per Categories </h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="areaChart" style="height:250px"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>



                </div>

            </div>

            <div class="row">



                <div class="col-md-6">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title text-primary text-bold" style="font-size:15px;"><i class="fa fa-chart-line fa-spin"></i> Joined Organizations Every Year</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="canvas" style="height:250px"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>



                </div>
                @{
                    var org = (RC.Models.Organization)ViewBag.BestOrg;

                    var followers = db.Subscribers.Where(x => x.organizationId == org.Id).Count();

                    //Number of Posts

                    var PostsNumber = db.Posts.Where(x => x.organizationId == org.Id).Count();


                    //Number of Reviews

                    var ReviewsNumber = db.Reviews.Where(x => x.organizationId == org.Id).Count();

                }
                <div class="col-md-6">
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 class="box-title text-info text-bold" style="font-size:15px;"><i class="fa fa-star fa-spin"></i> Best Organization </h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="box box-widget widget-user-2">
                                <!-- Add the bg color to the header using any of the bg-* classes -->
                                <div class="widget-user-header bg-info">
                                    <div class="widget-user-image">
                                        <img class="img-circle" src="~/Content/img/OrganizationsProfilePics/@org.User.imageUrl" alt="User Avatar">
                                    </div>
                                    <!-- /.widget-user-image -->
                                    <h3 class="widget-user-username">@org.orgnizationName</h3>
                                    <h5 class="widget-user-desc">@org.Category.Name Categorey</h5>
                                </div>
                                <div class="box-footer no-padding">
                                    <ul class="nav nav-stacked">

                                        <li><a href="#" class="text-aqua">Followers <span class="pull-right badge bg-aqua">@followers</span></a></li>
                                        <li><a href="#" class="text-green">Posts <span class="pull-right badge bg-green"> @PostsNumber</span></a></li>
                                        <li><a href="#" class="text-red">Reviews <span class="pull-right badge bg-red"> @ReviewsNumber</span></a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>


                </div>

            </div>



            <div class="row">

                <div class="col-md-12">
                    <div class="box box-warning">
                        <div class="box-header with-border">
                            <h3 class="box-title text-warning text-bold" style="font-size:15px;"><i class="fa fa-chart-bar fa-spin"></i> Number of Subscribers of Each Organization</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            @{
                                var subsCounter = 1;
                            }
                            <table id="Subscribers" class="table table-bordered table-condensed table-hover table-responsive">
                                <thead>
                                    <tr>
                                        <th># Rank</th>
                                        <th>Organization Name</th>
                                        <th>Total Number of Subscribers</th>
                                        <th>Males Reviews</th>
                                        <th>Females Reviews</th>

                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var top in (IEnumerable<Tuple<Organization, int, int, int>>)ViewData["SubsorganizationsLTuple"])
                                    {
                                        <tr>
                                            <td>@subsCounter</td>
                                            <td> <img class="img-circle" style="width:40px;height:40px;" src="~/Content/img/OrganizationsProfilePics/@top.Item1.User.imageUrl" /> @top.Item1.orgnizationName</td>
                                            <td>@top.Item2</td>
                                            <td>@top.Item3</td>
                                            <td>@top.Item4</td>

                                        </tr>
                                        subsCounter++;
                                    }

                                </tbody>

                            </table>
                        </div>
                        <!-- /.box-body -->
                    </div>



                </div>


            </div>

            @{

                var rankCounter = 1;
                var LeastCounter = 10;


            }

            <div class="row">
                <div class="col-md-6">
                    <div class="box box-success">
                        <div class="box-header with-border">
                            <h3 class="box-title text-success text-bold" style="font-size:15px;"><i class="fa fa-chart-bar fa-spin"></i> Top Ten Organizations</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <table class="table table-striped table-bordered table-condensed table-hover table-responsive text-success">
                                <tr>
                                    <th>Rank</th>
                                    <th>Organization Name</th>
                                    <th>Total Rate</th>

                                </tr>


                                @foreach (var top in (IEnumerable<Tuple<Organization, double>>)ViewData["TopTenOrganizationsTuple"])
                                {
                                    <tr>
                                        <td># @rankCounter</td>
                                        <td><img src="~/Content/img/OrganizationsProfilePics/@top.Item1.User.imageUrl" style="width:40px;height:40px;" class="img-circle" />  @top.Item1.orgnizationName </td>
                                        <td>@top.Item2</td>
                                    </tr>

                                    rankCounter++;

                                }


                            </table>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>


                <div class="col-md-6">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title text-primary text-bold" style="font-size:15px;"><i class="fa fa-chart-bar fa-spin"></i> Least Ten Organizations</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <table class="table table-striped table-bordered table-condensed table-hover table-responsive text-primary">
                                <tr>
                                    <th>Rank</th>
                                    <th>Organization Name</th>
                                    <th>Total Rate</th>

                                </tr>


                                @foreach (var top in (IEnumerable<Tuple<Organization, double>>)ViewData["LeastTenOrganizationsTuple"])
                                {
                                    <tr>
                                        <td># @LeastCounter</td>
                                        <td><img src="~/Content/img/OrganizationsProfilePics/@top.Item1.User.imageUrl" style="width:40px;height:40px;" class="img-circle" />  @top.Item1.orgnizationName </td>
                                        <td>@top.Item2</td>
                                    </tr>

                                    LeastCounter--;

                                }


                            </table>
                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>

            </div>




            <div class="row">


            </div>






            <div class="row">



                @{
                    //var Leastorg = (RC.Models.Organization)ViewBag.WorstOrg;

                    //var Leastfollowers = db.Subscribers.Where(x => x.organizationId == Leastorg.Id).Count();

                    ////Number of Posts

                    //var LeastPostsNumber = db.Posts.Where(x => x.organizationId == Leastorg.Id).Count();


                    ////Number of Reviews

                    //var LeastReviewsNumber = db.Reviews.Where(x => x.organizationId == Leastorg.Id).Count();

                }

                @*<div class="col-md-6">
                        <div class="box box-info">
                            <div class="box-header with-border">
                                <h3 class="box-title text-info text-bold" style="font-size:15px;"><i class="fa fa-star-half-alt fa-spin"></i> Worst Organization </h3>

                                <div class="box-tools pull-right">
                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                                </div>
                            </div>
                            <div class="box-body">
                                <div class="box box-widget widget-user-2">
                                    <!-- Add the bg color to the header using any of the bg-* classes -->
                                    <div class="widget-user-header bg-info">
                                        <div class="widget-user-image">
                                            <img class="img-circle" src="~/Content/img/OrganizationsProfilePics/@Leastorg.User.imageUrl" alt="User Avatar">
                                        </div>
                                        <!-- /.widget-user-image -->
                                        <h3 class="widget-user-username">@Leastorg.orgnizationName</h3>
                                        <h5 class="widget-user-desc">@Leastorg.Category.Name Categorey</h5>
                                    </div>
                                    <div class="box-footer no-padding">
                                        <ul class="nav nav-stacked">

                                            <li><a href="#" class="text-aqua">Followers <span class="pull-right badge bg-aqua">@Leastfollowers</span></a></li>
                                            <li><a href="#" class="text-green">Posts <span class="pull-right badge bg-green"> @LeastPostsNumber</span></a></li>
                                            <li><a href="#" class="text-red">Reviews <span class="pull-right badge bg-red"> @LeastReviewsNumber</span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <!-- /.box-body -->
                        </div>


                    </div>*@

            </div>

            <div class="row">

                <div class="col-md-6">
                    <div class="box box-warning">
                        <div class="box-header with-border">
                            <h3 class="box-title text-warning text-bold" style="font-size:15px;"><i class="fa fa-chart-pie fa-spin"></i> Organizations Price Ranges</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="PriceRanges" style="height:250px"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>

                <div class="col-md-6">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title text-primary text-bold" style="font-size:15px;"><i class="fa fa-chart-bar fa-spin"></i> Users Joined Every Year</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="usersPerYear" style="height:250px"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>

            </div>
            @{  var MalesPercent = @Html.Raw(Json.Encode(ViewBag.MalesPercent));
            var FemalesPercent = @Html.Raw(Json.Encode(ViewBag.FemalesPercent));


            var MalesClientsPercent = @Html.Raw(Json.Encode(ViewBag.MalesClientsPercent));
            var FemalesClientsPercent = @Html.Raw(Json.Encode(ViewBag.FemalesClientsPercent));
            }
            <div class="row">

                <div class="col-md-6">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title text-primary text-bold" style="font-size:15px;"><i class="fa fa-desktop fa-spin"></i> Reviews Percentages</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">

                            <div class="box box-info" style="margin-top:15px;">

                                <div class="box-body">
                                    <div class="col-md-12 col-sm-6 col-xs-12" style="margin-top:10px">
                                        <div class="info-box">
                                            <span class="info-box-icon bg-info"><i class="fa fa-male"></i></span>

                                            <div class="info-box-content">
                                                <h2>Males : @MalesPercent %</h2>


                                            </div>
                                        </div>


                                        <div class="info-box">
                                            <span class="info-box-icon bg-primary"><i class="fa fa-female"></i></span>

                                            <div class="info-box-content">

                                                <h2>Females : @FemalesPercent %</h2>

                                            </div>
                                        </div>
                                        <!-- /.info-box-content -->
                                    </div>
                                </div>
                                <!-- /.info-box -->
                            </div>


                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>




                <div class="col-md-6">
                    <div class="box box-warning">
                        <div class="box-header with-border">
                            <h3 class="box-title text-warning text-bold" style="font-size:15px;"><i class="fa fa-clipboard fa-spin"></i> Clients Percentages</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">

                            <div class="box box-warning" style="margin-top:15px;">

                                <div class="box-body">
                                    <div class="col-md-12 col-sm-6 col-xs-12" style="margin-top:10px">
                                        <div class="info-box">
                                            <span class="info-box-icon bg-success"><i class="fa fa-male"></i></span>

                                            <div class="info-box-content">
                                                <h2>Males : @MalesClientsPercent %</h2>


                                            </div>
                                        </div>


                                        <div class="info-box">
                                            <span class="info-box-icon bg-danger"><i class="fa fa-female"></i></span>

                                            <div class="info-box-content">

                                                <h2>Females : @FemalesClientsPercent %</h2>

                                            </div>
                                        </div>
                                        <!-- /.info-box-content -->
                                    </div>
                                </div>
                                <!-- /.info-box -->
                            </div>


                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>


            </div>
            @{

                var V_MalesFemales = @Html.Raw(Json.Encode(ViewBag.V_MalesFemales));
                var V_MalesMales = @Html.Raw(Json.Encode(ViewBag.V_MalesMales));
                var V_FemalesMales = @Html.Raw(Json.Encode(ViewBag.V_FemalesMales));
                var V_FemalesFemales = @Html.Raw(Json.Encode(ViewBag.V_FemalesFemales));
                var malesOrg = @Html.Raw(Json.Encode(ViewBag.malesOrg));
                var femalesOrg = @Html.Raw(Json.Encode(ViewBag.femalesOrg));




            }
            <div class="row">

                <div class="col-md-6">

                    <div class="box box-danger" style="font-weight:bold;">
                        <div class="box-header">
                            <h3 class="box-title text-danger text-bold" style="font-size:15px;"><i class="fa fa-table fa-spin"></i> Reports Sheet</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body no-padding">
                            <table class="table table-striped table-bordered table-condensed table-hover table-responsive text-danger">
                                <tr>
                                    <th style="width: 10px">#</th>
                                    <th>Reporter Type</th>
                                    <th>Reported Type</th>
                                    <th>Percentage in %</th>

                                </tr>
                                <tr>
                                    <td>1.</td>
                                    <td>Males</td>
                                    <td>Males</td>


                                    <td>@V_MalesMales%</td>
                                </tr>



                                <tr>
                                    <td>2.</td>
                                    <td>Males</td>
                                    <td>Females</td>

                                    <td>@V_MalesFemales%</td>
                                </tr>
                                <tr>
                                    <td>3.</td>
                                    <td>Females</td>
                                    <td>Males</td>

                                    <td>@V_FemalesMales%</td>
                                </tr>
                                <tr>
                                    <td>4.</td>
                                    <td>Females</td>
                                    <td>Females</td>

                                    <td>@V_FemalesFemales%</td>
                                </tr>
                                <tr>
                                    <td>5.</td>
                                    <td>Males</td>
                                    <td>Organizations</td>

                                    <td>@malesOrg%</td>
                                </tr>
                                <tr>
                                    <td>6.</td>
                                    <td>Females</td>
                                    <td>Organizations</td>

                                    <td>@femalesOrg%</td>
                                </tr>

                            </table>
                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>
                
                @{
                    var bestReviewer = (RC.Models.Review)ViewBag.bestReviewer;
                    var ReviewIntPoints = @Html.Raw(Json.Encode(ViewBag.ReviewIntPoints));

                }
                <div class="col-md-6">
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 class="box-title text-info text-bold" style="font-size:15px;"><i class="fa fa-star fa-spin"></i> Best Reviewer </h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            @if (bestReviewer != null)
                            {

                                <div class="box box-widget widget-user-2">
                                    <!-- Add the bg color to the header using any of the bg-* classes -->
                                    <div class="widget-user-header bg-info">
                                        <div class="widget-user-image">
                                            <img class="img-circle" style="margin-top:-14px;" src="~/files/@bestReviewer.Client.User.imageUrl" alt="User Avatar">
                                        </div>
                                        <!-- /.widget-user-image -->
                                        <h3 class="widget-user-username">@bestReviewer.Client.firstName @bestReviewer.Client.lastName</h3>

                                    </div>
                                    <div class="box-footer no-padding">
                                        <ul class="nav nav-stacked">


                                            <li><a href="#" class="text-green">Username:<span class="pull-right badge bg-green">@bestReviewer.Client.User.Username </span></a></li>
                                            <li><a href="#" class="text-red">Age: <span class="pull-right badge bg-red"> @bestReviewer.Client.Age</span></a></li>
                                            <li><a href="#" class="text-aqua">City: <span class="pull-right badge bg-aqua">@bestReviewer.Client.City.Name</span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            }
                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>
            @{
                var usefulRevCounter = 1;
            }
          


            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="box box-warning">
                        <div class="box-header with-border">
                            <h3 class="box-title text-warning text-bold" style="font-size:15px;"><i class="fa fa-chart-bar fa-spin"></i> Promotion oF Posts Profits From Each Organization</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <table id="ProfitTuple" class="table table-bordered table-condensed table-hover table-responsive">
                                <thead>
                                    <tr>
                                        <th># Rank</th>
                                        <th>Organization Name</th>
                                        <th>Total Number of Prmoted Posts</th>
                                        <th>Your Profit</th>

                                    </tr>
                                </thead>
                                <tbody>

                                    @{ var ProfitCounter = 1;}
                                    @foreach (var top in (IEnumerable<Tuple<Organization, int, double>>)ViewData["ProfitTuple"])
                                    {
                                        <tr>
                                            <td>@ProfitCounter</td>
                                            <td> <img class="img-circle" style="width:40px;height:40px;" src="~/Content/img/OrganizationsProfilePics/@top.Item1.User.imageUrl" /> @top.Item1.orgnizationName</td>
                                            <td>@top.Item2</td>
                                            <td>@top.Item3 $</td>

                                        </tr>
                                        ProfitCounter++;
                                    }

                                </tbody>

                            </table>
                        </div>
                        <!-- /.box-body -->
                    </div>


                </div>

            </div>


        <div class="row">
            <div class="col-md-6">
                
                <div class="row">
                    
                    <div class="col-md=12">
                        <div class="box box-warning">
                            <div class="box-header with-border">
                                <h3 class="box-title text-warning text-bold" style="font-size:15px;"><i class="fa fa-chart-bar fa-spin"></i> Number of useful Reviews for Each Orgnaization</h3>

                                <div class="box-tools pull-right">
                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                                </div>
                            </div>
                            <div class="box-body">
                                <table class="table table-striped table-bordered table-condensed table-hover table-responsive text-primary">
                                    <tr>
                                        <th>Rank</th>
                                        <th>Client Name</th>
                                        <th>Total Number of Useful Reviews</th>

                                    </tr>


                                    @foreach (var top in (List<Review>) ViewData["usefulRev"])
                                    {
                                        <tr>
                                            <td># @usefulRevCounter</td>
                                            <td><img src="~/files/@top.Client.User.imageUrl" style="width:40px;height:40px;" class="img-circle"/> @top.Client.User.Username </td>
                                            <td>@top.numberOfUseful</td>
                                        </tr>

                                        usefulRevCounter++;

                                    }


                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                    </div>
                    
                    
                    <div class="col-md-12">
                     
                            <div class="box box-warning">
                                <div class="box-header with-border">
                                    <h3 class="box-title text-warning text-bold" style="font-size:15px;"><i class="fa fa-clipboard fa-spin"></i> Reviewza Total Promotion Profits </h3>

                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                                    </div>
                                </div>
                                <div class="box-body">
                                    @{
                                        var ProfitResult = (Double)ViewBag.ProfitResult;


                                    }
                                    <div class="box box-warning" style="margin-top:15px;">

                                        <div class="box-body">
                                            <div class="col-md-12 col-sm-6 col-xs-12" style="margin-top:10px">
                                                <div class="info-box">
                                                    <span class="info-box-icon bg-success"><i class="fa fa-dollar"></i></span>

                                                    <div class="info-box-content">
                                                        <h2>Total Profits : @ProfitResult $</h2>


                                                    </div>
                                                </div>



                                                <!-- /.info-box-content -->
                                            </div>
                                        </div>
                                        <!-- /.info-box -->
                                    </div>


                                </div>
                                <!-- /.box-body -->
                            </div>

                        
                        

                    </div>

                </div>
            </div>


            <div class="col-md-6">
                <div class="box box-warning">
                    <div class="box-header with-border">
                        <h3 class="box-title text-warning text-bold" style="font-size:15px;"><i class="fa fa-chart-bar fa-spin"></i> Number of Reporters for Each Orgnaization</h3>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                    <div class="box-body">
                        <table id="ReportTuple" class="table table-bordered table-condensed table-hover table-responsive">
                            <thead>
                            <tr>
                                <th># Rank</th>
                                <th>Organization Name</th>
                                <th>Total Number of Reports</th>
                                <th>Number fo Males</th>
                                <th>Number fo Females</th>

                            </tr>
                            </thead>
                            <tbody>

                            @{ var ReportsCounter = 1;}
                            @foreach (var top in (IEnumerable<Tuple<Organization, int, int, int>>) ViewData["ReportTuple"])
                            {
                                <tr>
                                    <td>@ReportsCounter</td>
                                    <td> <img class="img-circle" style="width:40px;height:40px;" src="~/Content/img/OrganizationsProfilePics/@top.Item1.User.imageUrl"/> @top.Item1.orgnizationName</td>
                                    <td>@top.Item2</td>
                                    <td>@top.Item3</td>
                                    <td>@top.Item4</td>

                                </tr>
                                ReportsCounter++;
                            }

                            </tbody>

                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>

            </div>


        </div>

        </div>
    </div>





</div>




    <script src="~/Scripts/Chart.js"></script>

    @section scripts
{

        <script>

            $(document).ready(function(){
                // var randomScalingFactor = function(){ return Math.round(Math.random()*100)};
                var orgNames=  @Html.Raw(Json.Encode(ViewBag.organizationsNames));
                var SubscribersNumbers=  @Html.Raw(Json.Encode(ViewBag.Susbscribers));


                var barChartData = {
                    labels : orgNames,
                    datasets : [
                        {
                            fillColor : "rgba(255, 153, 51,0.8)",
                            strokeColor : "rgba(255, 153, 51,0.8)",
                            highlightFill: "rgba(255, 153, 51,0.75)",
                            highlightStroke: "rgba(255, 153, 51,1)",
                            data : SubscribersNumbers
                        }

                    ]

                }
                window.onload = function(){
                    var ctx1 = document.getElementById("subscribersCanvas").getContext("2d");
                    window.myBar = new Chart(ctx1).Bar(barChartData, {
                        responsive : true
                    });
                }

            });

        </script>



        <script>



            $(document).ready(function () {

                //Begin of Charts
                var organizations = @Html.Raw(Json.Encode(ViewBag.Organizations));
                var orgRev=@Html.Raw(Json.Encode(ViewBag.OrgReviews));
                var MalesList= @Html.Raw(Json.Encode(ViewBag.MalesList));
                var FemalesList=@Html.Raw(Json.Encode(ViewBag.FemalesList));



                $(function () {

                    /* ChartJS
                     * -------
                     * Here we will create a few charts using ChartJS
                     */

                    //--------------
                    //- Line CHART -
                    //--------------

                    // Get context with jQuery - using jQuery's .get() method.
                    var areaChartCanvas = $("#lineChart").get(0).getContext("2d");
                    // This will get the first returned node in the jQuery collection.
                    var lineChart = new Chart(areaChartCanvas);

                    var areaChartData = {
                        labels:organizations,

                        datasets: [

                        {
                            label: "Organizations Total Reviews",
                            fillColor: "rgba(60,141,188,0.9)",
                            strokeColor:"rgba(60,141,188,0.8)",
                            pointColor: "rgba(210, 214, 222, 1)",
                            pointStrokeColor: "#c1c7d1",
                            pointHighlightFill: "#fff",
                            pointHighlightStroke: "rgba(220,220,220,1)",
                            data: orgRev
                        },
                         {
                             label: "Number of Males",
                             fillColor: "rgba(0, 0, 153,0.9)",
                             strokeColor:"rgba(0, 0, 153,0.8)",
                             pointColor: "rgba(0, 0, 153, 1)",
                             pointStrokeColor: "#c1c7d1",
                             pointHighlightFill: "#fff",
                             pointHighlightStroke: "rgba(0, 0, 153,1)",
                             data: MalesList
                         },
                        {
                            label: "Number of Females",
                            fillColor: "rgba(204, 51, 153,0.9)",
                            strokeColor:"rgba(204, 51, 153,0.8)",
                            pointColor: "rgba(204, 51, 153, 1)",
                            pointStrokeColor: "#c1c7d1",
                            pointHighlightFill: "#fff",
                            pointHighlightStroke: "rgba(204, 51, 153,1)",
                            data: FemalesList
                        }
                        ]

                    };

                    var areaChartOptions = {
                        //Boolean - If we should show the scale at all
                        showScale: true,
                        //Boolean - Whether grid lines are shown across the chart
                        scaleShowGridLines: false,
                        //String - Colour of the grid lines
                        scaleGridLineColor: "rgba(0,0,0,.05)",
                        //Number - Width of the grid lines
                        scaleGridLineWidth: 1,
                        //Boolean - Whether to show horizontal lines (except X axis)
                        scaleShowHorizontalLines: true,
                        //Boolean - Whether to show vertical lines (except Y axis)
                        scaleShowVerticalLines: true,
                        //Boolean - Whether the line is curved between points
                        bezierCurve: true,
                        //Number - Tension of the bezier curve between points
                        bezierCurveTension: 0.3,
                        //Boolean - Whether to show a dot for each point
                        pointDot: false,
                        //Number - Radius of each point dot in pixels
                        pointDotRadius: 4,
                        //Number - Pixel width of point dot stroke
                        pointDotStrokeWidth: 1,
                        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                        pointHitDetectionRadius: 20,
                        //Boolean - Whether to show a stroke for datasets
                        datasetStroke: true,
                        //Number - Pixel width of dataset stroke
                        datasetStrokeWidth: 2,
                        //Boolean - Whether to fill the dataset with a color
                        datasetFill: true,
                        //String - A legend template
                        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
                        //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                        maintainAspectRatio: true,
                        //Boolean - whether to make the chart responsive to window resizing
                        responsive: true
                    };

                    //Create the line chart
                    lineChart.Line(areaChartData, areaChartOptions);

                    //-------------
                    //- LINE CHART -
                    //--------------
                    var lineChartCanvas = $("#lineChart").get(0).getContext("2d");
                    var lineChart = new Chart(lineChartCanvas);
                    var lineChartOptions = areaChartOptions;
                    lineChartOptions.datasetFill = false;
                    lineChart.Line(areaChartData, lineChartOptions);


                });


                //End of Line Chart




                //End of Second Chart
                var Cat=  @Html.Raw(Json.Encode(ViewBag.Categories));
                //  console.log(Cat);
                var orgCategories=  @Html.Raw(Json.Encode(ViewBag.orgCategories));
                //console.log(orgCategories);




                // Get context with jQuery - using jQuery's .get() method.
                var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
                // This will get the first returned node in the jQuery collection.
                var areaChart = new Chart(areaChartCanvas);

                var areaChartData = {
                    labels: Cat,
                    datasets: [
                      {
                          label: "Categories",
                          fillColor: "rgba(204, 0, 0, 1)",
                          strokeColor: "rgba(204, 0, 0, 1)",
                          pointColor: "rgba(204, 0, 0, 1)",
                          pointStrokeColor: "#c1c7d1",
                          pointHighlightFill: "#fff",
                          pointHighlightStroke: "rgba(204, 0, 0,1)",
                          data: orgCategories
                      }


                    ]
                };


                var areaChartOptions = {
                    //Boolean - If we should show the scale at all
                    showScale: true,
                    //Boolean - Whether grid lines are shown across the chart
                    scaleShowGridLines: false,
                    //String - Colour of the grid lines
                    scaleGridLineColor: "rgba(0,0,0,.05)",
                    //Number - Width of the grid lines
                    scaleGridLineWidth: 1,
                    //Boolean - Whether to show horizontal lines (except X axis)
                    scaleShowHorizontalLines: true,
                    //Boolean - Whether to show vertical lines (except Y axis)
                    scaleShowVerticalLines: true,
                    //Boolean - Whether the line is curved between points
                    bezierCurve: true,
                    //Number - Tension of the bezier curve between points
                    bezierCurveTension: 0.3,
                    //Boolean - Whether to show a dot for each point
                    pointDot: false,
                    //Number - Radius of each point dot in pixels
                    pointDotRadius: 4,
                    //Number - Pixel width of point dot stroke
                    pointDotStrokeWidth: 1,
                    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                    pointHitDetectionRadius: 20,
                    //Boolean - Whether to show a stroke for datasets
                    datasetStroke: true,
                    //Number - Pixel width of dataset stroke
                    datasetStrokeWidth: 2,
                    //Boolean - Whether to fill the dataset with a color
                    datasetFill: true,
                    //String - A legend template
                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
                    //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                    maintainAspectRatio: true,
                    //Boolean - whether to make the chart responsive to window resizing
                    responsive: true
                };

                //Create the line chart
                areaChart.Line(areaChartData, areaChartOptions);





            });



        </script>

        <script>


            //Organizations Joined Every Year


            var years=  @Html.Raw(Json.Encode(ViewBag.Years));
            var orgNumbers=  @Html.Raw(Json.Encode(ViewBag.orgInYears));

            // var randomScalingFactor1 = function(){ return Math.round(Math.random()*100)};
            var lineChartData = {
                labels :years,
                datasets : [
                    {

                        fillColor : "rgba(51, 102, 255,0.8)",
                        strokeColor : "rgba(51, 102, 255,1)",
                        pointColor : "rgba(51, 102, 255,1)",
                        pointStrokeColor : "#fff",
                        pointHighlightFill : "#fff",
                        pointHighlightStroke : "rgba(51, 102, 255,1)",
                        data : orgNumbers
                    },

                ]

            }



            var ctx = document.getElementById("canvas").getContext("2d");
            window.myLine = new Chart(ctx).Line(lineChartData, {
                responsive: true
            });


        </script>



        <script>
            var cities=  @Html.Raw(Json.Encode(ViewBag.cities));
            //console.log(cities);
            var orgcities=  @Html.Raw(Json.Encode(ViewBag.orgCities));

            var radarChartData = {
                labels:cities,
                datasets: [

                    {
                        label: "My Second dataset",
                        fillColor: "rgba(51, 153, 51,0.6)",
                        strokeColor: "rgba(51, 153, 51,1)",
                        pointColor: "rgba(51, 153, 51,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(51, 153, 51,1)",
                        data: orgcities
                    }
                ]
            };


            window.myRadar = new Chart(document.getElementById("canvasRadar").getContext("2d")).Radar(radarChartData, {
                responsive: true
            });


        </script>



        <script>


            var ClientsPerYear=  @Html.Raw(Json.Encode(ViewBag.ClientsPerYear));
            //console.log(cities);
            var OrgsPerYear=  @Html.Raw(Json.Encode(ViewBag.OrgsPerYear));
            var YearsInDB=  @Html.Raw(Json.Encode(ViewBag.YearsInDB));

            var MalesMonths=  @Html.Raw(Json.Encode(ViewBag.MalesMonths));
            var FemalesMonths=  @Html.Raw(Json.Encode(ViewBag.FemalesMonths));


            var randomScalingFactor = function(){ return Math.round(Math.random()*100)};
            var lineChartData = {
                labels : YearsInDB,
                datasets : [
                    {
                        label: "Clients Per Month",
                        fillColor : "rgba(97, 103, 116,0.8)",
                        strokeColor : "rgba(97, 103, 116,1)",
                        pointColor : "rgba(97, 103, 116,1)",
                        pointStrokeColor : "#fff",
                        pointHighlightFill : "#fff",
                        pointHighlightStroke : "rgba(97, 103, 116,1)",
                        data :ClientsPerYear
                    },
                    {
                        label: "Organizations Per Month",
                        fillColor : "rgba(255, 123, 126,0.8)",
                        strokeColor : "rgba(255, 123, 126,1)",
                        pointColor : "rgba(255, 123, 126,1)",
                        pointStrokeColor : "#fff",
                        pointHighlightFill : "#fff",
                        pointHighlightStroke : "rgba(255, 123, 126,1)",
                        data :OrgsPerYear
                    },
                    {
                        label: "Males Per Month",
                        fillColor : "rgba(102, 0, 51,0.8)",
                        strokeColor : "rgba(102, 0, 51,1)",
                        pointColor : "rgba(102, 0, 51,1)",
                        pointStrokeColor : "#fff",
                        pointHighlightFill : "#fff",
                        pointHighlightStroke : "rgba(102, 0, 51,1)",
                        data :MalesMonths
                    },
                    {
                        label: "Females Per Month",
                        fillColor : "rgba(255, 153, 0,0.8)",
                        strokeColor : "rgba(255, 153, 0,1)",
                        pointColor : "rgba(255, 153, 0,1)",
                        pointStrokeColor : "#fff",
                        pointHighlightFill : "#fff",
                        pointHighlightStroke : "rgba(255, 153, 0,1)",
                        data :FemalesMonths
                    }
                ]

            }


            var ctx = document.getElementById("lineUsers").getContext("2d");
            window.myLine = new Chart(ctx).Line(lineChartData, {
                responsive: true
            });




        </script>



        <script>

            // var randomScalingFactor = function(){ return Math.round(Math.random()*100)};
            var RatesList=  @Html.Raw(Json.Encode(ViewBag.LeastRatesList));
            var LeastTenList=  @Html.Raw(Json.Encode(ViewBag.LeastTenList));


            var barChartData = {
                labels : LeastTenList,
                datasets : [
                    {
                        fillColor : "rgba(204, 0, 0,0.8)",
                        strokeColor : "rgba(204, 0, 0,0.8)",
                        highlightFill: "rgba(204, 0, 0,0.75)",
                        highlightStroke: "rgba(204, 0, 0,1)",
                        data : RatesList
                    }

                ]

            }

            var ctx1 = document.getElementById("Least10").getContext("2d");
            window.myBar = new Chart(ctx1).Bar(barChartData, {
                responsive : true
            });




        </script>


        <script>

            var OrganizationsPriceRanges=  @Html.Raw(Json.Encode(ViewBag.OrganizationsPriceRanges));
            var PriceRangesList=  @Html.Raw(Json.Encode(ViewBag.PriceRangesList));

            //var doughnutData = [
            //		{
            //		    value: OrganizationsPriceRanges,
            //			color:["#F7464A","#FDB45C","#4D5360"],
            //			highlight: "#FF5A5E",
            //			label: PriceRangesList
            //		},



            //	];
            var radarChartData = {
                labels:PriceRangesList,
                datasets: [

                    {
                        label: "Numbers of Organizations Per Range",
                        fillColor: "rgba(255, 153, 0,0.8)",
                        strokeColor: "rgba(255, 153, 0,1)",
                        pointColor: "rgba(255, 153, 0,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(255, 153, 0,1)",
                        data: OrganizationsPriceRanges
                    }
                ]
            };


            window.myRadar = new Chart(document.getElementById("PriceRanges").getContext("2d")).Radar(radarChartData, {
                responsive: true
            });


        </script>


        <script>

            //Begin of Charts
            var ClientsListofYear = @Html.Raw(Json.Encode(ViewBag.ClientsListofYear));
            var OrgsListsofYear=@Html.Raw(Json.Encode(ViewBag.OrgsListsofYear));
            var AllYears=@Html.Raw(Json.Encode(ViewBag.AllYears));
            var MalesUsList=@Html.Raw(Json.Encode(ViewBag.MalesUsList));
            var FemalesUsList=@Html.Raw(Json.Encode(ViewBag.FemalesUsList));

            $(function () {

                /* ChartJS
                 * -------
                 * Here we will create a few charts using ChartJS
                 */

                //--------------
                //- Line CHART -
                //--------------

                // Get context with jQuery - using jQuery's .get() method.
                var areaChartCanvas = $("#usersPerYear").get(0).getContext("2d");
                // This will get the first returned node in the jQuery collection.
                var lineChart = new Chart(areaChartCanvas);

                var areaChartData = {
                    labels:AllYears,

                    datasets: [

                    {
                        label: "Clients ",
                        fillColor: "rgba(204, 51, 153,0.9)",
                        strokeColor:"rgba(204, 51, 153,0.8)",
                        pointColor: "rgba(204, 51, 153, 1)",
                        pointStrokeColor: "#c1c7d1",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(204, 51, 153,1)",
                        data: ClientsListofYear
                    },
                       {
                           label: "Organizations",
                           fillColor: "rgba(102, 102, 255,0.9)",
                           strokeColor:"rgba(102, 102, 255,0.8)",
                           pointColor: "rgba(102, 102, 255, 1)",
                           pointStrokeColor: "#c1c7d1",
                           pointHighlightFill: "#fff",
                           pointHighlightStroke: "rgba(102, 102, 255,1)",
                           data: OrgsListsofYear
                       },

                        {
                            label: "Males ",
                            fillColor: "rgba(102, 0, 51,0.9)",
                            strokeColor:"rgba(102, 0, 51,0.8)",
                            pointColor: "rgba(102, 0, 51, 1)",
                            pointStrokeColor: "#c1c7d1",
                            pointHighlightFill: "#fff",
                            pointHighlightStroke: "rgba(102, 0, 51,1)",
                            data: MalesUsList
                        },
                         {
                             label: "Females",
                             fillColor: "rgba(102, 204, 255,0.9)",
                             strokeColor:"rgba(102, 204, 255,0.8)",
                             pointColor: "rgba(102, 204, 255, 1)",
                             pointStrokeColor: "#c1c7d1",
                             pointHighlightFill: "#fff",
                             pointHighlightStroke: "rgba(102, 204, 255,1)",
                             data: FemalesUsList
                         },
                    ]

                };

                var areaChartOptions = {
                    //Boolean - If we should show the scale at all
                    showScale: true,
                    //Boolean - Whether grid lines are shown across the chart
                    scaleShowGridLines: false,
                    //String - Colour of the grid lines
                    scaleGridLineColor: "rgba(0,0,0,.05)",
                    //Number - Width of the grid lines
                    scaleGridLineWidth: 1,
                    //Boolean - Whether to show horizontal lines (except X axis)
                    scaleShowHorizontalLines: true,
                    //Boolean - Whether to show vertical lines (except Y axis)
                    scaleShowVerticalLines: true,
                    //Boolean - Whether the line is curved between points
                    bezierCurve: true,
                    //Number - Tension of the bezier curve between points
                    bezierCurveTension: 0.3,
                    //Boolean - Whether to show a dot for each point
                    pointDot: false,
                    //Number - Radius of each point dot in pixels
                    pointDotRadius: 4,
                    //Number - Pixel width of point dot stroke
                    pointDotStrokeWidth: 1,
                    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                    pointHitDetectionRadius: 20,
                    //Boolean - Whether to show a stroke for datasets
                    datasetStroke: true,
                    //Number - Pixel width of dataset stroke
                    datasetStrokeWidth: 2,
                    //Boolean - Whether to fill the dataset with a color
                    datasetFill: true,
                    //String - A legend template
                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
                    //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                    maintainAspectRatio: true,
                    //Boolean - whether to make the chart responsive to window resizing
                    responsive: true
                };

                //Create the line chart
                lineChart.Line(areaChartData, areaChartOptions);

                //-------------
                //- LINE CHART -
                //--------------
                var lineChartCanvas = $("#usersPerYear").get(0).getContext("2d");
                var lineChart = new Chart(lineChartCanvas);
                var lineChartOptions = areaChartOptions;
                lineChartOptions.datasetFill = false;
                lineChart.Line(areaChartData, lineChartOptions);


            });


            //End of Line Chart
        </script>

    }

    <script>
        var orgName=  @Html.Raw(Json.Encode(ViewBag.orgName));
        var ReportMalesList=  @Html.Raw(Json.Encode(ViewBag.ReportMalesList));
        var ReportFemalesList=  @Html.Raw(Json.Encode(ViewBag.ReportFemalesList));

        var barChartData = {
            labels : orgName,
            datasets : [
                {
                    label:"Number of Males",
                    fillColor : "rgba(255, 153, 51,0.8)",
                    strokeColor : "rgba(255, 153, 51,0.8)",
                    highlightFill: "rgba(255, 153, 51,0.75)",
                    highlightStroke: "rgba(255, 153, 51,1)",
                    data : ReportMalesList
                },
        {
            label:"Number of Females",
            fillColor : "rgba(255, 0, 102,0.8)",
            strokeColor : "rgba(255, 0, 102,0.8)",
            highlightFill: "rgba(255, 0, 102,0.75)",
            highlightStroke: "rgba(255, 0, 102,1)",
            data : ReportFemalesList
        }

            ]

        }

        var ctx1 = document.getElementById("reportOrg").getContext("2d");
        window.myBar = new Chart(ctx1).Bar(barChartData, {
            responsive : true
        });


        // var randomScalingFactor = function(){ return Math.round(Math.random()*100)};





    </script>


    <script>

        // var randomScalingFactor = function(){ return Math.round(Math.random()*100)};
        var orgNamesUseful=  @Html.Raw(Json.Encode(ViewBag.orgNamesUseful));
        var MalesUseful=  @Html.Raw(Json.Encode(ViewBag.MalesUseful));
        var Femalesuseful=  @Html.Raw(Json.Encode(ViewBag.Femalesuseful));




        var barChartData = {
            labels : orgNamesUseful,
            datasets : [
                {
                    label:"Males Total Useful Reviews",
                    fillColor : "rgba(204, 0, 0,0.8)",
                    strokeColor : "rgba(204, 0, 0,0.8)",
                    highlightFill: "rgba(204, 0, 0,0.75)",
                    highlightStroke: "rgba(204, 0, 0,1)",
                    data : MalesUseful
                },
        {
            label:"Females Total useful Reviews",
            fillColor : "rgba(204, 204, 0,0.8)",
            strokeColor : "rgba(204,204, 0,0.8)",
            highlightFill: "rgba(204, 204, 0,0.75)",
            highlightStroke: "rgba(204, 204, 0,1)",
            data : Femalesuseful
        }



            ]

        }

        var ctx1 = document.getElementById("useful").getContext("2d");
        window.myBar = new Chart(ctx1).Bar(barChartData, {
            responsive : true
        });




    </script>
    <script>

        // var randomScalingFactor = function(){ return Math.round(Math.random()*100)};
        var OrgNames=  @Html.Raw(Json.Encode(ViewBag.OrgNames));
        var Promoted=  @Html.Raw(Json.Encode(ViewBag.Promoted));
        var Profits=  @Html.Raw(Json.Encode(ViewBag.Profits));




        var barChartData = {
            labels : OrgNames,
            datasets : [
                {
                    label:"Number of Promoted Posts",
                    fillColor : "rgba(255, 51, 0,0.8)",
                    strokeColor : "rgba(255, 51, 0,0.8)",
                    highlightFill: "rgba(255, 51, 0,0.75)",
                    highlightStroke: "rgba(255, 51, 0,1)",
                    data : Promoted
                },
        {
            label:"Profit form This Organization",
            fillColor : "rgba(204, 204, 0,0.8)",
            strokeColor : "rgba(204,204, 0,0.8)",
            highlightFill: "rgba(204, 204, 0,0.75)",
            highlightStroke: "rgba(204, 204, 0,1)",
            data : Profits
        }



            ]

        }

        var ctx1 = document.getElementById("profit").getContext("2d");
        window.myBar = new Chart(ctx1).Bar(barChartData, {
            responsive : true
        });




    </script>
